'''30. НОП с восстановлением ответа

Ограничение времени	1 секунда
Ограничение памяти	64Mb

Даны две последовательности, требуется найти и вывести их наибольшую общую подпоследовательность.

Формат ввода
В первой строке входных данных содержится число N – длина первой последовательности (1 ≤ N ≤ 1000).
Во второй строке заданы члены первой последовательности (через пробел) – целые числа, не превосходящие
10000 по модулю.

В третьей строке записано число M – длина второй последовательности (1 ≤ M ≤ 1000). В четвертой
строке задаются члены второй последовательности (через пробел) – целые числа, не превосходящие
10000 по модулю.

Формат вывода
Требуется вывести наибольшую общую подпоследовательность данных последовательностей, через пробел.'''

n = int(input())
strn = list(map(int, input().split()))
m = int(input())
strm = list(map(int, input().split()))
dp = [[0] * (m + 1) for _ in range(n + 1)]
for i in range(1, n + 1):
    for j in range(1, m + 1):
        if strn[i - 1] == strm[j - 1]:
            dp[i][j] = dp[i - 1][j - 1] + 1
        else:
            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])

res = []
i, j = n, m
while i and j:
    if strn[i - 1] == strm[j - 1]:
        res.append(strn[i - 1])
        i -= 1
        j -= 1
    elif dp[i - 1][j] == dp[i][j]:
        i -= 1
    else:
        j -= 1
print(*res[::-1])